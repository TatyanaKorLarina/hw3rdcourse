{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNa;AACQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD,sCAAsC,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://hw3rdcourse/./style.css?6429","webpack://hw3rdcourse/webpack/bootstrap","webpack://hw3rdcourse/webpack/runtime/make namespace object","webpack://hw3rdcourse/./index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\";\r\nimport \"./style.css\";\r\nconst gameLevelEl = document.querySelector(\".deck\");\r\n\r\nconst renderCardGame = () => {\r\n    topGame.innerHTML = \"\";\r\n\r\n    const cardGameHTML = `\r\n        <form class=\"game\">\r\n            <h1 class=\"title\">Выбери сложность</h1>\r\n            <div class=\"levels\">\r\n\r\n                <label for=\"1\">\r\n                    <div class=\"level\">\r\n                        <input class=\"level-input\" id=\"1\" name=\"level\" value=\"1\" type=\"radio\">\r\n                        1\r\n                    </div>\r\n                </label>\r\n\r\n                <label for=\"2\">\r\n                    <div class=\"level\">\r\n                        <input class=\"level-input\" id=\"2\" name=\"level\" value=\"2\" type=\"radio\">\r\n                        2\r\n                    </div>\r\n                </label>\r\n\r\n                <label for=\"3\">\r\n                    <div class=\"level\">\r\n                        <input class=\"level-input\" id=\"3\" name=\"level\" value=\"3\" type=\"radio\">\r\n                        3\r\n                    </div>\r\n                </label>\r\n\r\n            </div>\r\n            <button type=\"submit\" class=\"start-button\" disabled>Старт</button>\r\n        </form>\r\n        `;\r\n\r\n    gameLevelEl.innerHTML = cardGameHTML;\r\n\r\n    const levelEl = document.querySelector(\".levels\");\r\n    const startButton = document.querySelector(\".start-button\");\r\n\r\n    \r\n    const buttonsLevel = document.querySelectorAll(\".level\");\r\n    for (const button of buttonsLevel) {\r\n        button.addEventListener(\"click\", function () {\r\n            for (const button of buttonsLevel) {\r\n                button.classList.remove(\"chosen\");\r\n            }\r\n            this.classList.add(\"chosen\");\r\n        });\r\n    }\r\n\r\n    \r\n    function isChosenLevel() {\r\n        levelEl.addEventListener(\"change\", (event) => {\r\n            if (event.target.matches('input[type=\"radio\"]')) {\r\n                startButton.disabled = false;\r\n            }\r\n        });\r\n    }\r\n    isChosenLevel();\r\n\r\n    function chooseLevel() {\r\n        startButton.addEventListener(\"click\", () => {\r\n            const startLevel = levelEl.querySelector(\r\n                'input[type=\"radio\"]:checked'\r\n            ).value;\r\n\r\n            console.log(startLevel);\r\n            startGame(startLevel);\r\n        });\r\n    }\r\n    chooseLevel();\r\n};\r\n\r\nconst createGameCard = (defaultIcon, flippedCardIcon) => {\r\n  const card = document.createElement(\"div\");\r\n  card.classList.add(\"game-card\");\r\n\r\n  const notFlippedCardI = document.createElement(\"img\");\r\n  const flippedCardI = document.createElement(\"img\");\r\n\r\n  notFlippedCardI.setAttribute(\"src\", `${defaultIcon}`);\r\n  flippedCardI.setAttribute(\"src\", `${flippedCardIcon}`);\r\n\r\n  card.append(flippedCardI, notFlippedCardI);\r\n\r\n  return card;\r\n};\r\n\r\nconst topGame = document.querySelector(\".top\");\r\nconst startGame = (startLevel) => {\r\n    let firstCard = null;\r\n    let secondCard = null;\r\n    let clickable = true;\r\n\r\n    const restartButton = document.createElement(\"button\");\r\n    restartButton.textContent = \"Начать заново\";\r\n    restartButton.classList.add(\"restart\");\r\n    const timer = document.createElement(\"div\");\r\n    timer.textContent = \"00.00\";\r\n    timer.classList.add(\"timer-counting\");\r\n\r\n    const gameSection = document.querySelector(\".deck\");\r\n    const gameTable = document.createElement(\"div\");\r\n\r\n    const initCards = generateCardsArray(startLevel);\r\n    const doubleCards = doubleCardsArray(initCards);\r\n\r\n    gameSection.innerHTML = \"\";\r\n    topGame.innerHTML = \"\";\r\n\r\n    gameTable.classList.add(\"game-table\");\r\n\r\n    shuffle(doubleCards);\r\n\r\n    doubleCards.forEach((icon) =>\r\n        gameTable.append(createGameCard(\"./static/back.svg\", icon))\r\n    );\r\n\r\n    topGame.append(timer, restartButton);\r\n    gameSection.append(gameTable);\r\n\r\n    const cards = document.querySelectorAll(\".game-card\");\r\n\r\n    restartButton.addEventListener(\"click\", renderCardGame);\r\n\r\n    \r\n    cards.forEach((card, index) =>\r\n        card.addEventListener(\"click\", () => {\r\n            if (\r\n                clickable === true &&\r\n                !card.classList.contains(\"successfully\")\r\n            ) {\r\n                card.classList.add(\"flip\");\r\n\r\n                if (firstCard === null) {\r\n                    firstCard = index;\r\n                } else {\r\n                    if (index !== firstCard) {\r\n                        secondCard = index;\r\n                        clickable = false;\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    firstCard !== null &&\r\n                    secondCard !== null &&\r\n                    firstCard !== secondCard\r\n                ) {\r\n                    if (\r\n                        cards[firstCard].firstElementChild.src ===\r\n                        cards[secondCard].firstElementChild.src\r\n                    ) {\r\n                      setTimeout(() => {\r\n                        cards[firstCard].classList.add(\"successfully\");\r\n                        cards[secondCard].classList.add(\"successfully\");\r\n\r\n                            firstCard = null;\r\n                            secondCard = null;\r\n                            clickable = true;\r\n                            alert(\"Вы победили!\");\r\n                          }, 500);\r\n                    } else {\r\n                      alert(\"Вы проиграли!\");\r\n                      setTimeout(() => {\r\n                            cards[firstCard].classList.remove(\"flip\");\r\n                            cards[secondCard].classList.remove(\"flip\");\r\n\r\n                            firstCard = null;\r\n                            secondCard = null;\r\n                            clickable = true;\r\n                          }, 500);\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    );\r\n};\r\n\r\nconst shuffle = (array) => {\r\n  let currentIndex = array.length,\r\n      randomIndex;\r\n\r\n  while (currentIndex !== 0) {\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      [array[currentIndex], array[randomIndex]] = [\r\n          array[randomIndex],\r\n          array[currentIndex],\r\n      ];\r\n  }\r\n\r\n  return array;\r\n};\r\n\r\nconst doubleCardsArray = (array) =>\r\n  array.reduce((res, current) => res.concat([current, current]), []);\r\n\r\nconst generateCardsArray = (startLevel) => {\r\n  const cards = [\r\n    \"./static/Spades A.png\",\r\n    \"./static/Spades K.png\",\r\n    \"./static/Spades Q.png\",\r\n    \"./static/Spades J.png\",\r\n    \"./static/Spades 10.png\",\r\n    \"./static/Spades 9.png\",\r\n    \"./static/Spades 8.png\",\r\n    \"./static/Spades 7.png\",\r\n    \"./static/Spades 6.png\",\r\n    \"./static/Hearts A.png\",\r\n    \"./static/Hearts K.png\",\r\n    \"./static/Hearts Q.png\",\r\n    \"./static/Hearts J.png\",\r\n    \"./static/Hearts 10.png\",\r\n    \"./static/Hearts 9.png\",\r\n    \"./static/Hearts 8.png\",\r\n    \"./static/Hearts 7.png\",\r\n    \"./static/Hearts 6.png\",\r\n    \"./static/Diamonds A.png\",\r\n    \"./static/Diamonds K.png\",\r\n    \"./static/Diamonds Q.png\",\r\n    \"./static/Diamonds J.png\",\r\n    \"./static/Diamonds 10.png\",\r\n    \"./static/Diamonds 9.png\",\r\n    \"./static/Diamonds 8.png\",\r\n    \"./static/Diamonds 7.png\",\r\n    \"./static/Diamonds 6.png\",\r\n    \"./static/Clubs A.png\",\r\n    \"./static/Clubs K.png\",\r\n    \"./static/Clubs Q.png\",\r\n    \"./static/Clubs J.png\",\r\n    \"./static/Clubs 10.png\",\r\n    \"./static/Clubs 9.png\",\r\n    \"./static/Clubs 8.png\",\r\n    \"./static/Clubs 7.png\",\r\n    \"./static/Clubs 6.png\",\r\n  ];\r\n  cards.sort(() => Math.random() - 0.5);\r\n  \r\n  \r\n    \r\n  switch (startLevel) {\r\n    case \"1\":\r\n      cards.length = 3;\r\n      return cards;\r\n      \r\n    case \"2\":\r\n      cards.length = 6;\r\n      return cards;\r\n    case \"3\":\r\n      cards.length = 9;\r\n      return cards;\r\n    default:\r\n        break;\r\n  }\r\n} \r\n;\r\n\r\nconst cardsApp = () => {\r\n  renderCardGame();\r\n};\r\n\r\ncardsApp();\r\n"],"names":[],"sourceRoot":""}