{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://hw3rdcourse/./style.css?6429","webpack://hw3rdcourse/webpack/bootstrap","webpack://hw3rdcourse/webpack/runtime/make namespace object","webpack://hw3rdcourse/./index.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\";\r\n\r\nimport \"./style.css\";\r\n//import * as _ from \"lodash\";\r\nconst gameLevelEl = document.querySelector<HTMLElement>(\".deck\");\r\nconst resultGame = document.querySelector<HTMLElement>(\".result\");\r\nconst finalScreen = document.querySelector<HTMLElement>(\".final-screen\");\r\nconst gameScreen = document.querySelector<HTMLElement>(\".whole\");\r\nconst topGame = document.querySelector(\".top\");\r\nconst renderCardGame = () => {\r\n    if (topGame) {\r\n        topGame.innerHTML = \"\";\r\n    }\r\n    if (resultGame) {\r\n        resultGame.innerHTML = \"\";\r\n        resultGame.classList.remove(\"result\");\r\n    }\r\n   if (finalScreen) {\r\n        finalScreen.innerHTML = \"\";\r\n        finalScreen.classList.remove(\"final-screen\");\r\n   }\r\n   if (gameScreen) {\r\n    gameScreen.classList.remove(\"dark-result\");\r\n}\r\n    \r\n    \r\n\r\n    \r\n    const cardGameHTML = `\r\n        <form class=\"game\">\r\n            <h1 class=\"title\">Выбери сложность</h1>\r\n            <div class=\"levels\">\r\n\r\n                <label for=\"1\">\r\n                    <div class=\"level\">\r\n                        <input class=\"level-input\" id=\"1\" name=\"level\" value=\"1\" type=\"radio\">\r\n                        1\r\n                    </div>\r\n                </label>\r\n\r\n                <label for=\"2\">\r\n                    <div class=\"level\">\r\n                        <input class=\"level-input\" id=\"2\" name=\"level\" value=\"2\" type=\"radio\">\r\n                        2\r\n                    </div>\r\n                </label>\r\n\r\n                <label for=\"3\">\r\n                    <div class=\"level\">\r\n                        <input class=\"level-input\" id=\"3\" name=\"level\" value=\"3\" type=\"radio\">\r\n                        3\r\n                    </div>\r\n                </label>\r\n\r\n            </div>\r\n            <button type=\"submit\" class=\"start-button\" disabled>Старт</button>\r\n        </form>\r\n        `;\r\n\r\n        if (gameLevelEl) {\r\n            gameLevelEl.innerHTML = cardGameHTML;\r\n        }\r\n        \r\n\r\n        const levelEl: HTMLElement | null = document.querySelector(\".levels\");\r\n        const startButton: HTMLButtonElement | null = document.querySelector(\".start-button\");\r\n\r\n        const buttonsLevel = document.querySelectorAll(\".level\");\r\n       \r\n            for (const button of buttonsLevel) {\r\n                button.addEventListener(\"click\", function () {\r\n                    if(buttonsLevel){\r\n                    for (const button of buttonsLevel) {\r\n              button.classList.remove(\"chosen\");\r\n            }\r\n            button.parentElement?.classList.add(\"chosen\");\r\n                    }  \r\n        });\r\n        };\r\n    \r\n\r\n    function isChosenLevel() {\r\n        \r\n        if (levelEl && startButton) {\r\n            levelEl.addEventListener(\"change\", (event: Event) => {\r\n                const target = event.target as HTMLInputElement;   \r\n                if (target.matches('input[type=\"radio\"]')) {\r\n                    startButton.disabled = false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    isChosenLevel();\r\n\r\n    function chooseLevel() {\r\n        if (startButton && levelEl) {\r\n            startButton.addEventListener(\"click\", () => {\r\n              const checkedInput: HTMLInputElement | null = levelEl.querySelector('input[type=\"radio\"]:checked');\r\n              if (checkedInput) {\r\n                const startLevel = checkedInput.value;\r\n                startGame(startLevel);\r\n              }\r\n            });\r\n          }\r\n        }\r\n        \r\n        chooseLevel();}\r\n\r\nconst createGameCard = (defaultIcon: object | string, flippedCardIcon: object | string) => {\r\n    const card = document.createElement(\"div\");\r\n    card.classList.add(\"game-card\");\r\n\r\n    const notFlippedCardI= document.createElement(\"img\");\r\n    const flippedCardI = document.createElement(\"img\");\r\n\r\n    notFlippedCardI.setAttribute(\"src\", `${defaultIcon}`);\r\n    flippedCardI.setAttribute(\"src\", `${flippedCardIcon}`);\r\n\r\n    card.append(flippedCardI, notFlippedCardI);\r\n\r\n    return card;\r\n};\r\n\r\n//const topGame = document.querySelector(\".top\");\r\nconst startGame = (startLevel: string) => {\r\n    let firstCard: number | null = null;\r\n    let secondCard: number | null = null;;\r\n    let clickable = true;\r\n    let Interval: number | NodeJS.Timeout;\r\n    let seconds = 0;\r\n    let tens = 0;\r\n\r\n    const restartButton = document.createElement(\"button\");\r\n    restartButton.textContent = \"Начать заново\";\r\n    restartButton.classList.add(\"restart\");\r\n    const timer = document.createElement(\"div\");\r\n\r\n    const appendSeconds = document.createElement(\"spent\");\r\n    const appendTens = document.createElement(\"spent\");\r\n    appendSeconds.textContent = \"00\";\r\n    appendTens.textContent = \"00\";\r\n    appendSeconds.classList.add(\"timer-count\");\r\n    appendTens.classList.add(\"timer-count\");\r\n    const point = document.createElement(\"spent\");\r\n    point.textContent = \".\";\r\n    point.classList.add(\"timer-count\");\r\n\r\n    timer.append(appendSeconds, point, appendTens);\r\n\r\n    const imgResult = document.createElement(\"img\");\r\n    imgResult.setAttribute(\"src\", \"static/celebration.png\");\r\n    const titleResult = document.createElement(\"h3\");\r\n    titleResult.textContent = \"Вы выиграли!\";\r\n    titleResult.classList.add(\"victory\");\r\n    const timeResult = document.createElement(\"h3\");\r\n    timeResult.textContent = \"Затраченное время!\";\r\n    timeResult.classList.add(\"elapsed-time\");\r\n\r\n    const gameSection = document.querySelector(\".deck\");\r\n    const gameTable = document.createElement(\"div\");\r\n\r\n    const initCards = generateCardsArray(startLevel);\r\n    const doubleCards = doubleCardsArray(initCards);\r\n\r\n    if (gameSection) {\r\n        gameSection.innerHTML = \"\";\r\n    }\r\n    if (topGame) {\r\n        topGame.innerHTML = \"\";\r\n    }\r\n    if (resultGame) {\r\n        resultGame.innerHTML = \"\";\r\n    }\r\n   \r\n    gameTable.classList.add(\"game-table\");\r\n    gameTable.classList.add(\"game-table\");\r\n\r\n    shuffle(doubleCards);\r\n\r\n    doubleCards.forEach((icon: string) =>\r\n        gameTable.append(createGameCard(\"./static/back.svg\", icon)),\r\n    );\r\n    if (topGame) {\r\n      topGame.append(timer, restartButton);  \r\n    }\r\n    if (gameSection) {\r\n        gameSection.append(gameTable);\r\n    }\r\n    \r\n\r\n    const cards = document.querySelectorAll(\".game-card\");\r\n\r\n    restartButton?.addEventListener(\"click\", renderCardGame);\r\n\r\n    function startTimer() {\r\n        tens++;\r\n\r\n        if (tens < 9) {\r\n            appendTens.innerHTML = \"0\" + tens;\r\n        }\r\n\r\n        if (tens > 9) {\r\n            appendTens.innerHTML = \"\" + tens;;\r\n        }\r\n\r\n        if (tens > 99) {\r\n            seconds++;\r\n            appendSeconds.innerHTML = \"0\" + seconds;\r\n            tens = 0;\r\n            appendTens.innerHTML = \"0\" + 0;\r\n        }\r\n\r\n        if (seconds > 9) {\r\n            appendSeconds.innerHTML = \"\" + seconds;\r\n        }\r\n    }\r\n    cards.forEach((card, index) =>\r\n        card.addEventListener(\"click\", () => {\r\n            clearInterval(Interval);\r\n            Interval = setInterval(startTimer, 10);\r\n            if (\r\n                clickable === true &&\r\n                !card.classList.contains(\"successfully\")\r\n            ) {\r\n                card.classList.add(\"flip\");\r\n\r\n                if (firstCard === null) {\r\n                    firstCard = index;\r\n                } else {\r\n                    if (index !== firstCard) {\r\n                        secondCard = index;\r\n                        clickable = false;\r\n                    }\r\n                }\r\n\r\n                if (\r\n                    firstCard !== null &&\r\n                    secondCard !== null &&\r\n                    firstCard !== secondCard\r\n                ) {\r\n                    if (\r\n                        cards[firstCard].firstElementChild?.outerHTML ===\r\n                        cards[secondCard].firstElementChild?.outerHTML) {\r\n                        setTimeout(() => {\r\n                            if (firstCard  && secondCard) {\r\n                            cards[firstCard].classList.add(\"successfully\");\r\n                            cards[secondCard].classList.add(\"successfully\");\r\n                            }\r\n                            firstCard = null;\r\n                            secondCard = null;\r\n                            clickable = true;\r\n                            //alert(\"Вы победили!\");\r\n                        }, 500);\r\n                    } else {\r\n                        clearInterval(Interval);\r\n                        //alert(\"Вы проиграли!\");\r\n                        setTimeout(() => {\r\n                            appendSeconds.classList.add(\"set-timer\");\r\n                            appendTens.classList.add(\"set-timer\");\r\n                            point.classList.add(\"set-timer\");\r\n\r\n                            imgResult.setAttribute(\"src\", \"static/dead.png\");\r\n                            titleResult.textContent = \"Вы проиграли!\";\r\n                            titleResult.classList.add(\"victory\");\r\n                            if (resultGame) {\r\n                               resultGame.classList.add(\"result\");\r\n                                resultGame.append(\r\n                                    imgResult,\r\n                                    titleResult,\r\n                                    timeResult,\r\n                                    timer,\r\n                                    restartButton,\r\n                                ); \r\n                            }\r\n                            if (finalScreen && resultGame) {\r\n                                finalScreen.classList.add(\"final-screen\");\r\n                                finalScreen.append(resultGame);\r\n                            }\r\n                            if (gameScreen){\r\n                                gameScreen.classList.add(\"dark-result\");\r\n                            }\r\n                            \r\n                        }, 500);\r\n                    }\r\n                }\r\n            }\r\n            if (\r\n                Array.from(cards).every((card) =>\r\n                    card.className.includes(\"flip\"),\r\n                )\r\n            ) {\r\n                clearInterval(Interval);\r\n                setTimeout(() => {\r\n                    appendSeconds.classList.add(\"set-timer\");\r\n                    appendTens.classList.add(\"set-timer\");\r\n                    point.classList.add(\"set-timer\");\r\n                    if (resultGame) {\r\n                        resultGame.classList.add(\"result\");\r\n                        resultGame.append(\r\n                            imgResult,\r\n                            titleResult,\r\n                            timeResult,\r\n                            timer,\r\n                            restartButton,\r\n                        );\r\n                    }\r\n                    if (finalScreen && resultGame) {\r\n                        finalScreen.classList.add(\"final-screen\");\r\n                        finalScreen.append(resultGame);\r\n                    }\r\n                    if (gameScreen) {\r\n                        gameScreen.classList.add(\"dark-result\");\r\n                    }\r\n                    \r\n                }, 500);\r\n            }\r\n        }),\r\n    );\r\n    setTimeout(() => {\r\n        cards.forEach((card) => card.classList.remove(\"flip\"));\r\n    }, 5000);\r\n    cards.forEach((card) => card.classList.add(\"flip\"));\r\n};\r\n\r\nconst shuffle = (array: Array<string> | Array<number>) => {\r\n    let currentIndex = array.length,\r\n        randomIndex;\r\n\r\n    while (currentIndex !== 0) {\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex--;\r\n\r\n        [array[currentIndex], array[randomIndex]] = [\r\n            array[randomIndex],\r\n            array[currentIndex],\r\n        ];\r\n    }\r\n\r\n    return array;\r\n};\r\n\r\nconst doubleCardsArray = (array: string[]): string[] =>\r\n    array.reduce((res: string[], current: string) => res.concat([current, current]), []);\r\n\r\nconst generateCardsArray = (startLevel: string | number[]): string[] => {\r\n    const cards: string[]  = [\r\n        \"./static/Spades A.png\",\r\n        \"./static/Spades K.png\",\r\n        \"./static/Spades Q.png\",\r\n        \"./static/Spades J.png\",\r\n        \"./static/Spades 10.png\",\r\n        \"./static/Spades 9.png\",\r\n        \"./static/Spades 8.png\",\r\n        \"./static/Spades 7.png\",\r\n        \"./static/Spades 6.png\",\r\n        \"./static/Hearts A.png\",\r\n        \"./static/Hearts K.png\",\r\n        \"./static/Hearts Q.png\",\r\n        \"./static/Hearts J.png\",\r\n        \"./static/Hearts 10.png\",\r\n        \"./static/Hearts 9.png\",\r\n        \"./static/Hearts 8.png\",\r\n        \"./static/Hearts 7.png\",\r\n        \"./static/Hearts 6.png\",\r\n        \"./static/Diamonds A.png\",\r\n        \"./static/Diamonds K.png\",\r\n        \"./static/Diamonds Q.png\",\r\n        \"./static/Diamonds J.png\",\r\n        \"./static/Diamonds 10.png\",\r\n        \"./static/Diamonds 9.png\",\r\n        \"./static/Diamonds 8.png\",\r\n        \"./static/Diamonds 7.png\",\r\n        \"./static/Diamonds 6.png\",\r\n        \"./static/Clubs A.png\",\r\n        \"./static/Clubs K.png\",\r\n        \"./static/Clubs Q.png\",\r\n        \"./static/Clubs J.png\",\r\n        \"./static/Clubs 10.png\",\r\n        \"./static/Clubs 9.png\",\r\n        \"./static/Clubs 8.png\",\r\n        \"./static/Clubs 7.png\",\r\n        \"./static/Clubs 6.png\",\r\n    ];\r\n    \r\n    \r\n\r\n    cards.sort(() => Math.random() - 0.5);\r\n\r\n    switch (startLevel) {\r\n        case \"1\":\r\n            cards.length = 3;\r\n            return cards;\r\n\r\n        case \"2\":\r\n            cards.length = 6;\r\n            return cards;\r\n        case \"3\":\r\n            cards.length = 9;\r\n            return cards;\r\n        default:\r\n            break;\r\n            \r\n    }\r\n    return cards\r\n};\r\n\r\nconst cardsApp = () => {\r\n    renderCardGame();\r\n};\r\n\r\ncardsApp();\r\n"],"names":[],"sourceRoot":""}